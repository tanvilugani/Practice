<Window x:Class="BasicApplication.View.EmployeesView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:viewmodel="clr-namespace:BasicApplication.ViewModel"
        Title="Employees" Height="400" Width="300"
        DataContext="{Binding Source={StaticResource mainViewModelLocator},  Path=EmployeesViewModel}"
        >

    <Window.Resources>
        <Style x:Key="AddButton" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle">
                <Setter.Value>
                    <Style>
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="#FFDDDDDD"/>
            <Setter Property="BorderBrush" Value="#FF707070"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <!--Added control template and content presenter for binding content-->
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Ellipse Fill="BlueViolet"></Ellipse>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"></ContentPresenter>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="EditButton" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle">
                <Setter.Value>
                    <Style>
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="#FFDDDDDD"/>
            <Setter Property="BorderBrush" Value="#FF707070"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#FFBEE6FD"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FF3C7FB1"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#FFC4E5F6"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FF2C628B"/>
                            </Trigger>
                            <Trigger Property="ToggleButton.IsChecked" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#FFBCDDEE"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FF245A83"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" TargetName="border" Value="#FFF4F4F4"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FFADB2B5"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#FF838383"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Added styles and implemented to a label-->
        <Style x:Key="LabelStyle" TargetType="Label">
            <Setter Property="FontSize" Value="20"></Setter>
        </Style>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="20"></RowDefinition>
            <RowDefinition Height="100"></RowDefinition>
            <RowDefinition Height="auto"></RowDefinition>
        </Grid.RowDefinitions>

        <!--Illustrates StackPanel-->
        <StackPanel Grid.Row="0" Orientation="Horizontal">
            <Button Content="Add" Width="50" Command="{Binding AddEmployeeCommand}" Style="{DynamicResource AddButton}">
            </Button>
            <Button Content="Update" Width="50" Command="{Binding UpdateEmployeeCommand}" Style="{DynamicResource EditButton}"
                    Background="AliceBlue"></Button>
        </StackPanel>

        <!--Illustrates ItemsPanelTemplate change and Datatemplate for ItemTemplate-->
        <ListView Grid.Row="1" Margin="5" Name="EmployeesViewList" ItemsSource="{Binding Employees, TargetNullValue='N/A', Mode=TwoWay}" SelectedItem="{Binding SelectedEmployee}">
            <ListView.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal"></StackPanel>
                </ItemsPanelTemplate>
            </ListView.ItemsPanel>
            <ListView.ItemTemplate>
                <DataTemplate>
                    <WrapPanel>
                        <Label Content="{Binding EmpId}"></Label>
                        <Label Content="{Binding Name}"></Label>
                        <Label Content="{Binding Salary}" ></Label>
                    </WrapPanel>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>

        <StackPanel Grid.Row="2">
            <Label Content="Selected Employee Details : "  Style="{StaticResource LabelStyle}"></Label>

            <!--Not working at present the target null value-->
            <!--Illustrates implementation of Grid-->
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="30"></RowDefinition>
                    <RowDefinition Height="30"></RowDefinition>
                    <RowDefinition Height="30"></RowDefinition>
                    <RowDefinition Height="30"></RowDefinition>
                    <RowDefinition Height="30"></RowDefinition>
                </Grid.RowDefinitions>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="200"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                </Grid.ColumnDefinitions>

                <Label Content="Id" Grid.Column="0" Grid.Row="0"></Label>
                <Label Content="Name" Grid.Column="0" Grid.Row="1"></Label>
                <Label Content="Department" Grid.Column="0" Grid.Row="2" ></Label>
                <Label Content="Salary" Grid.Column="0" Grid.Row="3" ></Label>
                <Label Content="DOJ" Grid.Column="0" Grid.Row="4" ></Label>

                <Label Content="{Binding SelectedEmployee.EmpId, TargetNullValue='N/A'}" Grid.Column="1" Grid.Row="0" ></Label>
                <Label Content="{Binding SelectedEmployee.Name, TargetNullValue='N/A'}" Grid.Column="1" Grid.Row="1" ></Label>
                <Label Content="{Binding SelectedEmployee.Department, TargetNullValue='N/A'}" Grid.Column="1" Grid.Row="2" ></Label>
                <Label Content="{Binding SelectedEmployee.Salary, TargetNullValue='N/A', Converter={StaticResource salaryConverter}}" Grid.Column="1" Grid.Row="3" ></Label>
                <Label Content="{Binding SelectedEmployee.DOJ, TargetNullValue='N/A'}"  Grid.Column="1" Grid.Row="4" ></Label>
            </Grid>
        </StackPanel>
    </Grid>
</Window>
